@model IEnumerable<AdminLteMvc.Models.WEBSales.Users>

@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}


<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title">@Html.Awe().TextBox("txtsearch").Placeholder("Search").CssClass("searchtxt")</h3>
    </div><!-- /.box-header -->
    <div class="box-body">
     
        <div id="demoContent">

            @(Html.Awe().Grid("ApiDemoGrid")
          .Columns(new[]{
              new Column{Bind = "UserID", Header = "User ID"},
              new Column{Bind = "UserName", Header = "User Name"},
              new Column{Bind = "Branch"},
              new Column{Bind = "Contact"},
              new Column{Bind = "Email",},
              new Column{Bind = "Active", ClientFormatFunc = "toggleButton", Width = 90}

          })
              .Mod(o => o.PageInfo().PageSize().ColumnsSelector())
              .Resizable()
              .Reorderable()
              .Height(400)
              .Groupable(false)
              .Selectable(SelectionType.Single)
              .Parent("txtsearch", "search")

            .Url(Url.Action("GetItems", "Users")))

        </div>


      

    </div>
    <div class="box-footer">
        <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "Users")'"> <i class="fa fa-plus-circle fa-1x"></i> Add New</button>
        <button type="button" class="btn btn-info" id="view"> <i class="fa fa-search fa-1x"></i> View Details</button>
        <button type="button" class="btn btn-warning" id="edit"> <i class="fa fa-pencil fa-1x"></i> Edit</button>
        <button type="button" class="btn btn-danger" id="delete"> <i class="fa fa-trash fa-1x"></i> Delete</button>
    </div>
</div>
<link href="~/Content/bootstrap-toggle.css" rel="stylesheet" />
@*<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.0/css/bootstrap-toggle.min.css" rel="stylesheet">*@
@section Scripts{
    @*<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.0/js/bootstrap-toggle.min.js"></script>*@
<script src="~/Scripts/bootstap-toggle.js"></script>

<script type="text/javascript">

    $(function () {

        $('#ApiDemoGrid').on('awerender', function () {
            $(this).find(".checkbox-toggle").bootstrapToggle();
        });

        $('#txtsearch').keyup(function () {
            $('#ApiDemoGrid').data('api').load();
        });

        $('#ApiDemoGrid').on('aweload', function (e, data, rd) {
            $('#log').prepend('aweload handled,\n data: ' + JSON.stringify(data) + "\n request data" + JSON.stringify(rd) + '\n\n');
        }).on('awebeginload', function (e, data) {
            $('#log').prepend('awebeginload handled,\n request data: ' + JSON.stringify(data) + '\n\n');
        });

        var lastSelectedIds;
        $('#ApiDemoGrid').on('aweselect', function () {
            lastSelectedIds = $.map($(this).data('api').getSelection(), function (val) { return val.UserID; });
        })

        $('#view').click(function () {
            if (lastSelectedIds != null) {
                window.location.href = '/Users/Details/' + lastSelectedIds;
            }
            else {
                $.notify("Please select row to view details.", "error");
            }
        });

        $('#edit').click(function () {
            if (lastSelectedIds != null) {
                window.location.href = '/Users/Edit/' + lastSelectedIds;
            }
            else {
                $.notify("Please select row to view details.", "error");
            }
        });

        $('#delete').click(function () {
            if (lastSelectedIds != null) {
                window.location.href = '/Users/Delete/' + lastSelectedIds;
            }
            else {
                $.notify("Please select row to view details.", "error");
            }
        });
    });

    function setContent(o) {
        $('#ApiDemoGrid').data('api').clearpersist();
        $('#demoContent').html(o);
    };

    var toggleButton = function (model, prop) {
        var checked = model[prop] ? 'checked = "checked"' : '';
        return '<input disabled="disabled" type="checkbox" ' + checked + ' class="checkbox-toggle" data-toggle="toggle" data-on="Yes" data-off="No" data-size="small">';
    };

</script>

}

<style>
    .boldh .awe-col, .boldh {
        color: blue;
    }

    .bluev {
        color: blueviolet;
    }

    .pinkb {
        background: pink !important;
    }

    .greenb {
        background: #f0f9f7 !important;
    }
</style>
