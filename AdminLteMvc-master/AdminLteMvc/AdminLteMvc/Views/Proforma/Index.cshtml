@model AdminLteMvc.Models.WEBSales.ProformaBills
@{
    ViewBag.Title = "Proforma Bills";
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}

<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title">@Html.Awe().TextBox("txtsearch").Placeholder("Search").CssClass("searchtxt")</h3>
    </div>
    <div class="box-body">
        <div id="demoContent">

            @(Html.Awe().Grid("ApiDemoGrid")
          .Mod(o => o.PageInfo().PageSize().ColumnsSelector())
          .Columns(new[]{
              new Column{Bind = "proformaBillNo", Header = "Bill No"},
new Column{Bind = "proformaBillDate", Header = "Bill Date"},
new Column{Bind = "proformaBillVesselName", Header = "Vessel Name"},
new Column{Bind = "proformaBillVoyageNo", Header = "Voyage No"},
new Column{Bind = "proformaBillDestination", Header = "Destination"},
new Column{Bind = "proformaBillShipper", Header = "Shipper"},
new Column{Bind = "proformaBillShippersAddress", Header = "Shipper's Address"},
new Column{Bind = "proformaBillShippersTelNo", Header = "Shipper's Tel No"},
new Column{Bind = "proformaBillServiceType", Header = "Service Type"},
new Column{Bind = "proformaBillConsignee", Header = "Consignee"},
new Column{Bind = "proformaBillConsigneesAddress", Header = "Consignee's Address"},
new Column{Bind = "proformaBillConsigneesTelNo", Header = "Consignee's Tel No"},
new Column{Bind = "proformaBillMarks", Header = "Marks"},
new Column{Bind = "proformaBillQty", Header = "Quantity"},
new Column{Bind = "proformaBillUnit", Header = "Unit"},
new Column{Bind = "proformaBillDescriptionOfCargo", Header = "Description of Cargo"},
new Column{Bind = "proformaBillValue", Header = "Value"},
new Column{Bind = "proformaBillWeight", Header = "Weight"},
new Column{Bind = "proformaBillMeasurement", Header = "Measurement"},
new Column{Bind = "proformaBillRemarks", Header = "Remarks"},
new Column{Bind = "proformaBillMeasuredBy", Header = "Measured By"},
new Column{Bind = "proformaBillTruckersName", Header = "Trucker's Name"},
new Column{Bind = "proformaBillShippersName", Header = "Shipper's Name"}
          })
              .Resizable()
              .Reorderable()
              .Height(350)
              .Groupable(false)
              .Selectable(SelectionType.Single)
              .Parent("txtsearch", "search")
              .Url(Url.Action("GetBills", "Proforma")))

        </div>
    </div>
    <div class="box-footer">
        <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Billing", "Proforma")'"> <i class="fa fa-paper-plane-o fa-1x"></i>Add Billing</button>
        <button type="button" class="btn btn-default" id="viewbill"> <i class="fa fa-paper-plane-o fa-1x"></i>View Bill</button>
    </div>
</div>
<link href="~/Content/bootstrap-toggle.css" rel="stylesheet" />
@section Scripts{
    <script src="~/Scripts/bootstap-toggle.js"></script>

    <script type="text/javascript">

        $(function () {

            $('#ApiDemoGrid').on('awerender', function () {
                $(this).find(".checkbox-toggle").bootstrapToggle();
            });

            $('#txtsearch').keyup(function () {
                $('#ApiDemoGrid').data('api').load();
            });

            $('#ApiDemoGrid').on('aweload', function (e, data, rd) {
                $('#log').prepend('aweload handled,\n data: ' + JSON.stringify(data) + "\n request data" + JSON.stringify(rd) + '\n\n');
            }).on('awebeginload', function (e, data) {
                $('#log').prepend('awebeginload handled,\n request data: ' + JSON.stringify(data) + '\n\n');
            });

            var lastSelectedIds;
            var lastSelectedBillNo;
            $('#ApiDemoGrid').on('aweselect', function () {
                lastSelectedIds = $.map($(this).data('api').getSelection(), function (val) { return val.proformaBillID; });
                lastSelectedBillNo = $.map($(this).data('api').getSelection(), function (val) { return val.proformaBillNo; });
                console.log(lastSelectedIds);
            })

            $('#viewbill').click(function () {

                if (lastSelectedIds != null) {
                    if (lastSelectedIds.length != 0) {
                        window.location.href = '/Proforma/ViewBillDetails/?billNo=' + lastSelectedBillNo;
                    }
                    else {
                        $.notify("Please select a bill to view.", "error");
                    }
                }
                else {
                    $.notify("Please select a bill to view.", "error");
                }
            });
        });

        function setContent(o) {
            $('#ApiDemoGrid').data('api').clearpersist();
            $('#demoContent').html(o);
        };

        var toggleButton = function (model, prop) {
            var checked = model[prop] ? 'checked = "checked"' : '';
            return '<input disabled="disabled" type="checkbox" ' + checked + ' class="checkbox-toggle" data-toggle="toggle" data-on="Yes" data-off="No" data-size="small">';
        };

    </script>
}
<style>
    td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
